/*
* Gmsh script to generate the swirling device mesh
*
* Filename: swirler.geo
* Description: Generation of the swirling device geometry and mesh with Gmsh
* This script is based on the previous work of Halldor PALSSON(2) and Sylvain LALOT(1).
*
*  Author(s): Francois BEAUBERT(1), Sylvain LALOT(1), Hadrien BAUDUIN(1)
*
* (1) TEMPO EA4542, University of Valenciennes, France
* (2) Faculty of Industrial Engineering, Mechanical Engineering and Computer Science, University of Iceland

* Created: 07/01/2011
* By: Francois BEAUBERT
* Version: 1.0 alpha-3
* Changelog:
* 21/01/20111 by Sylvain LALOT
* 25/01/2011 by Francois BEAUBERT
* 16/02/2011 by Sylvain LALOT
* 05/05/2011 by Hadrien BAUDUIN
* 10/06/2011 by Hadrien BAUDUIN
*
* Usage:
* o use ./run.sh
*/
Geometry.AutoCoherence = 0;

Geometry.Tolerance = 1e-8; //1e-6;

Mesh.RecombinationAlgorithm = 0; //0: standard, 1: blossom

/*
* Geometric parameters
*/
pipeDiameter   = 0.036;
centerDiameter = 0.005;
entranceLength = 0.072;
finLength      = 0.072;
tailLength     = 0.010;
mainPipeLength = 0.32; //4.32; //0.100; //for testing (vizualisation) purpose under gmsh or parafoam (do not forget to reduce also avalSwirlerLength)
numberOfFins   = 4; // neither 2, nor 1 for this current script
//HB
Radius2           = (3/2) *centerDiameter;
noseL2            = (1/1) *Radius2;
tailL2            = (1/3) *Radius2;
avalSwirlerLength = ( 5 ) *pipeDiameter +finLength;

/*
* Twisting parameters
*/
exitAngle  = 60;
twistAngle = 150;
exitLead   = 0.50;

/*
* spline coefficients
*/
gamma = 0.6;
beta  = 1.2;

twistAngle = twistAngle*Pi/180;
exitAngle  = exitAngle*Pi/180;
leadAngle  = exitLead*twistAngle;

/*
* Meshing parameters
*/
// !!!!!!!!!!!!!!!!! Check the implementation of the progression and the bump at lines=1340 "Meshing of the edges" !!!!!!!!
// Not fully completed yet (10/06/2011)!!!
// Progression or Bump
radialProgression        = 0.97; // <=1 for the "radius" linked to the pipewall
// ou :
// radialBump = 0.05;
radialCprogression       = 0.98; // <=1 , >=radialProgression, for the "intermediate radius" linked to the pipewall
//radialProgression2 ??
radial2Progression       = 1.05; // >=1 for the "radius2" of slice without centerdiameter, before the swirler
radial2Progression2      = 1.03; // >=1 for the "radius2" of slice WITH centerdiameter
radial2Progression3      = 1; // >=1 (=1?, <=radial2Progression) for the "radius2" of slice without centerdiameter AFTER the swirler
noseProgression          = 0.99; // <=1 for the horizontal lines above the nose
noseProgression2         = 1.01; // >=1(??) for the top of the nose
//noseProgressionC ??
//noseProgression2C ??
radial2noseProgression1  = 1.02; // >=1 for the front of the nose
radial2noseProgression2  = 0.90; // <=1 for the link between the slice before nose and the "center-nose"
radial2noseProgression2C = radial2noseProgression2; // <=1, >=radial2noseProgression2, for lc1c
radial2noseProgression3  = 0.97; // <=1 for the horizontal centerline just before the nose
//tailProgression          = 1; // <=1 for the horizontal lines above the tail
//tailProgression2         = 1; // <=1 for the beginning of the tail
//radial2tailProgression1  = 1; // <=1 for the end of the tail
//radial2tailProgression2  = 1; // >=1 for the link between the "center-tail" and avalSwirler
//radial2tailProgression2C = radial2tailProgression2; // for lc2c
radial2tailProgression3  = 1; // >=1 for the horizontal centerline just after the end of the tail
avalSwirlerProgression   = 1; // >=1 (=1), part of the pipe just after the tail
revolutionProgression    = 1.05; // >=1 revolution ext., before the swirler
revolutionProgression2   = 1; // >=1 (=1?, <=revolutionProgression), revolution ext., AFTER the swirler
revolution2Progression   = 1.02; // >=1 revolution int., Centerpiece
interProgression         = 1.05; // >=1 for the sides of the center-quadrangle before the swirler
interProgression2        = 1; // >=1 (=1?, <=interProgression) for the sides of the center-quadrangle AFTER the swirler

//HB
cellsNoseLength     = 25;
cellsAvalSwirler    = 150;

cellsEntranceLength = 35; // Number of cells upstream of the swirling device
entranceProgression = 0.95; // Stretching of the cells upstream the swirling device
cellsRadial         = 25; // Number of cells in the radial direction
cellsRadial2        = 30; // Number of cells in the radial direction
//radialBump          = 0.05; // Stretching of the cells in the radial direction
cellsTailLength     = 40; // Number of cells for the tail of the centerpiece
cellsFinLength      = 100; // Number of cells for the fins length
finBump             = 0.4; // Stretching of the cells at the beginning and end of the fins
nbPointsSpline      = 60; // Number of points to describe the spline edges used for the fins
cellsPipeLength     = 700; // Number of cells downstream of the swirling device
pipeProgression     = 1.0020; // Stretching of the cells dowstream the swirling device

//HB
mshRefAngle = 105; // angle at the "top" of the reference quadrangle of slices

/*
* Code
*/

   define(R, 10) //10 mm column diameter
   define(L, 10) //1 cm length
   define(PI, 3.14159265)
CW, calc(R/2))
  define(CX, calc(R*cos((PI/180)*45)))
define(CZ, calc(R*sin((PI/180)*45)))



// Points for the tube
p1= newp; Point(p1_1) = {0, 0, -entranceLength};
p2= newp; Point(p2_1) = {0, 0, -noseL2};
p= newp; Point(pcc3) = {0, 0, 0};
p= newp; Point(pt1) = {0, 0, -centerDiameter/2};
p= newp; Point(pt2) = {centerDiameter/2*Cos(-Pi/4), 0, centerDiameter/2*Sin(-Pi/4)}; //SL
p= newp; Point(p3_1) = {centerDiameter/2, 0, 0};
p= newp; Point(p1_3) = {pipeDiameter/2, 0, -entranceLength};
p= newp; Point(p2_3) = {pipeDiameter/2, 0, -noseL2};
p= newp; Point(p3_3) = {pipeDiameter/2, 0, 0};
